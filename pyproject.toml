[project]
name = "bonsai"
description = "bonsai is a RISC-V CPU designed using Amaranth HDL"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "amaranth[builtin-yosys]>=0.5.4",
    "amaranth-boards",
    "asyncio>=3.4.3",
    "taskipy>=1.14.1",
    "rich>=13.9.4",
    "textual>=1.0.0",
    "pyelftools>=0.32",
]
dynamic = ["version"]

[dependency-groups]
dev = [
    "pytest-mock>=3.14.0",
    "pytest>=8.3.3",
    "ruff>=0.7.4",
    "pytest-cov>=6.0.0",
    "pytest-html>=4.1.1",
    "amaranth-yosys>=0.40.0.0.post100",
    "mypy>=1.14.1",
    "types-requests>=2.32.0.20241016",
    "pytest-xdist>=3.6.1",
    "setuptools-scm>=8.1.0",
]


[tool.uv.sources]
amaranth-boards = { git = "https://github.com/amaranth-lang/amaranth-boards.git" }
amaranth = { git = "https://github.com/amaranth-lang/amaranth.git" }

[tool.uv]
cache-keys = [{ file = "pyproject.toml" }, { git = true }]

[build-system]
requires = ["setuptools", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["bonsai"]
include-package-data = true

[tool.setuptools_scm]
version_scheme = "post-release"
local_scheme = "dirty-tag"

[tool.taskipy.tasks]
run = "python bonsai/main.py"
sim = "python bonsai/main.py sim"
build = "python bonsai/main.py build"
emu = "python bonsai/main.py emu"
check = "ruff check --fix"
format = "ruff format"
mypy = "mypy bonsai"
test = "pytest -v --ff -rfs"                                           #-n auto"
cov = "pytest --cov bonsai --cov-report term --cov-report xml -n auto"
build-package = "uv build"
build-tangnano9k = "python bonsai/main.py build --platform tangnano9k"
build-arty = "python bonsai/main.py build --platform arty"
sram-program = "openFPGALoader -b tangnano9k build/top.fs"
flash-program = "openFPGALoader -b tangnano9k -f build/top.fs"

[tool.ruff.lint]
extend-select = ["I"]

[tool.ruff]
extend-ignore = ["F841"]

[tool.mypy]
python_version = "3.10"
warn_unused_configs = true
warn_return_any = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unreachable = true
strict_optional = true
disallow_untyped_calls = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_decorators = false
no_implicit_optional = true
ignore_missing_imports = true
show_error_codes = true
show_column_numbers = true
show_error_context = true
pretty = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
cache_dir = ".pytest_cache"
testpaths = ["tests"]
